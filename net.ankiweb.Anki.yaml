app-id: net.ankiweb.Anki

runtime: org.kde.Platform
runtime-version: '5.14'
sdk: org.kde.Sdk

base: io.qt.qtwebengine.BaseApp
base-version: '5.14'

command: anki
rename-desktop-file: anki.desktop
rename-icon: anki

finish-args:
  # X11/Wayland
  - --socket=x11
  - --share=ipc
  - --socket=wayland
  - --device=dri
  # Flashcards with sound
  - --socket=pulseaudio
  # Sync
  - --share=network
  # Allow other instances to see lockfiles
  - --env=TMPDIR=/var/tmp

modules:
  - name: sip
    buildsystem: simple
    build-commands:
      - python3 setup.py build
      - python3 setup.py install --prefix="${FLATPAK_DEST}" --optimize=1
    sources:
      - type: archive
        url: https://pypi.python.org/packages/source/s/sip/sip-5.2.0.tar.gz
        sha256: 3d3f279a61d54d832b12496409811ee062dab1ac05a1e7b40824f63b423fb0e7
    cleanup:
      - /bin
      - /include
    modules:
      - python3-toml.json
      - python3-packaging.json

  - name: pyqt5
    config-opts:
      - --assume-shared
      - --concatenate
      - --confirm-license
      - --no-designer-plugin
      - --no-dist-info
      - --no-docstrings
      - --no-qml-plugin
      - --no-qsci-api
      - --no-stubs
      - --no-tools
      - QMAKE_CFLAGS_RELEASE='-I/usr/include/python3.7m/'
      - QMAKE_CXXFLAGS_RELEASE='-I/usr/include/python3.7m/'
    # FIXME: we should do this on ARM too, but for some reason it fails to build
    build-options:
      arch:
        i386:
          config-opts:
            - --enable=QtCore
            - --enable=QtGui
            - --enable=QtNetwork
            - --enable=QtPrintSupport
            - --enable=QtWebChannel
            - --enable=QtWidgets
        x86_64:
          config-opts:
            - --enable=QtCore
            - --enable=QtGui
            - --enable=QtNetwork
            - --enable=QtPrintSupport
            - --enable=QtWebChannel
            - --enable=QtWidgets
    sources:
      - type: archive
        url: https://pypi.python.org/packages/source/P/PyQt5/PyQt5-5.14.2.tar.gz
        sha256: bd230c6fd699eabf1ceb51e13a8b79b74c00a80272c622427b80141a22269eb0
      - type: script
        commands:
          - processed=`sed -e 's|prefix|sysroot|' <<< $@`
          - python3 configure.py $processed
        dest-filename: configure
    cleanup:
      - /share/sip

  - name: pyqt5-webengine
    config-opts:
      - --concatenate
      - --no-dist-info
      - --no-docstrings
      - --no-qsci-api
      - --no-sip-files
      - --no-stubs
      - QMAKE_CFLAGS_RELEASE='-I/usr/include/python3.7m/'
      - QMAKE_CXXFLAGS_RELEASE='-I/usr/include/python3.7m/'
    sources:
      - type: archive
        url: https://pypi.python.org/packages/source/P/PyQtWebEngine/PyQtWebEngine-5.14.0.tar.gz
        sha256: e11595051f8bfbfa49175d899b2c8c2eea3a3deac4141edf4db68c3555221c92
      - type: script
        commands:
          - processed=`sed -e 's|prefix|sysroot|' <<< $@`
          - python3 configure.py $processed
        dest-filename: configure

  - name: mpv
    buildsystem: simple
    build-commands:
      - python3 waf configure
          --disable-alsa
          --disable-build-date
          --disable-libass
          --disable-manpage-build
          --disable-oss-audio
          --prefix=/app
      - python3 waf build
      - python3 waf install
    sources:
      - type: archive
        url: https://github.com/mpv-player/mpv/archive/v0.29.1.tar.gz
        sha256: f9f9d461d1990f9728660b4ccb0e8cb5dce29ccaa6af567bec481b79291ca623
      - type: file
        url: https://waf.io/waf-2.0.15
        sha256: 34b8156ea375089e1bed5a31acfaff4024f6f3e96f3bee98f801f0c281ad3d2c
        dest-filename: waf
    cleanup:
      - /include
      - /lib/pkgconfig
      - /share

  - name: portaudio
    config-opts:
      - --disable-static
      - --without-oss
    sources:
      - type: archive
        url: http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz
        sha256: f5a21d7dcd6ee84397446fa1fa1a0675bb2e8a4a6dceb4305a8404698d8d1513
    cleanup:
      - /lib/pkgconfig
      - /include
      - '*.la'

  - python3-beautifulsoup4.json
  - python3-send2trash.json
  - python3-pyaudio.json
  - python3-requests.json
  - python3-decorator.json
  - python3-markdown.json
  - python3-distro.json

  # jsonschema has is a PITA to install
  # https://github.com/pypa/pip/issues/5268
  # https://stackoverflow.com/questions/26664102/why-can-i-not-create-a-wheel-in-python
  - python3-wheel.json
  - python3-attrs.json
  - python3-setuptools_scm.json
  - python3-jsonschema.json

  - name: anki
    no-autogen: true
    make-install-args:
      - PREFIX=/app
    post-install:
      - install -Dm644 -t /app/share/icons/hicolor/scalable/apps anki.svg
      - install -Dm644 -t /app/share/metainfo net.ankiweb.Anki.appdata.xml
      - install -Dm644 anki.xml /app/share/mime/packages/net.ankiweb.Anki.xml
      # .mo files are in a non-standard directory, work-around that,
      # so that Flatpak and Appstream can find the files
      - mv /app/share/anki/locale /app/share/locale
      - ln -s /app/share/locale /app/share/anki/locale
    sources:
      - type: archive
        url: https://github.com/ankitects/anki/archive/2.1.15.tar.gz
        sha256: 16fc2986accf545412884a8a938c5600c4740e87403580553573a05133cc86f9
      - type: file
        path: anki.svg
      - type: file
        path: net.ankiweb.Anki.appdata.xml
      - type: script
        commands:
        - sed -i -e 's/cp -a/cp -dR/' Makefile
    cleanup:
      - /share/pixmaps
