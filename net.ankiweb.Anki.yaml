app-id: net.ankiweb.Anki

runtime: org.kde.Platform
runtime-version: '5.12'
sdk: org.kde.Sdk

command: anki
rename-desktop-file: anki.desktop
rename-icon: anki

finish-args:
  # X11/Wayland
  - --socket=x11
  - --share=ipc
  - --socket=wayland
  - --device=dri
  # Flashcards with sound
  - --socket=pulseaudio
  # Sync
  - --share=network

modules:
  - name: ffmpeg
    config-opts:
      - --enable-shared
      - --disable-static
      - --enable-gnutls
      - --disable-doc
      - --disable-programs
      - --disable-encoders
      - --disable-muxers
      - --disable-network
      - --disable-libxcb
      - --disable-xlib
      - --disable-v4l2-m2m
      - --disable-vaapi
      - --disable-vdpau
      - --disable-sdl2
      - --disable-decoders
      - --enable-decoder=aac
      - --enable-decoder=mp3
      - --enable-decoder=cscd
      - --disable-hwaccels
      - --disable-parsers
      - --enable-parser=aac
      - --disable-demuxers
      - --enable-demuxer=aac
      - --enable-demuxer=mp3
      - --enable-demuxer=mov
      - --disable-filters
      - --disable-bsfs
      - --disable-indevs
      - --disable-outdevs
      - --enable-outdev=alsa
      - --disable-protocols
      - --enable-protocol=file
    sources:
      - type: archive
        url: https://ffmpeg.org/releases/ffmpeg-4.0.2.tar.xz
        sha256: a95c0cc9eb990e94031d2183f2e6e444cc61c99f6f182d1575c433d62afb2f97
    cleanup:
      - /include
      - /lib/pkgconfig
      - /share/ffmpeg

  - name: mpv
    buildsystem: simple
    build-commands:
      - python3 waf configure --prefix=/app --disable-libass --disable-build-date --disable-oss-audio --disable-alsa
      - python3 waf build
      - python3 waf install
    sources:
      - type: archive
        url: https://github.com/mpv-player/mpv/archive/v0.29.1.tar.gz
        sha256: f9f9d461d1990f9728660b4ccb0e8cb5dce29ccaa6af567bec481b79291ca623
      - type: file
        url: https://waf.io/waf-2.0.14
        sha256: c5bc6083bba5e24415bb83872fa9e048afa150109a7e8855af679076d0779b22
        dest-filename: waf
    cleanup:
      - /include
      - /lib/pkgconfig
      - /share

  - name: sip
    config-opts:
      - --no-dist-info
      - --no-stubs
      - --bindir=/app/bin
      - --destdir=/app/lib/python3.7/site-packages
      - --incdir=/app/include
      - --pyidir=/app/lib/python3.7/site-packages
      - --sipdir=/app/share/sip
      - --sip-module PyQt5.sip
    sources:
      - type: archive
        url: https://sourceforge.net/projects/pyqt/files/sip/sip-4.19.13/sip-4.19.13.tar.gz
        sha256: e353a7056599bf5fbd5d3ff9842a6ab2ea3cf4e0304a0f925ec5862907c0d15e
      - type: script
        commands:
          - processed=`sed -e 's|--prefix=/app||' <<< $@`
          - python3 configure.py $processed
        dest-filename: configure
    cleanup:
      - /bin
      - /include

  - name: pyqt5
    config-opts:
      - --assume-shared
      - --concatenate
      - --confirm-license
      - --no-designer-plugin
      - --no-dist-info
      - --no-docstrings
      - --no-qml-plugin
      - --no-qsci-api
      - --no-sip-files
      - --no-stubs
      - --no-tools
      - QMAKE_CFLAGS_RELEASE='-I/usr/include/python3.7m/'
      - QMAKE_CXXFLAGS_RELEASE='-I/usr/include/python3.7m/'
    # FIXME: we should do this on ARM too, but for some reason it fails to build
    build-options:
      arch:
        i386:
          config-opts:
            - --enable=QtCore
            - --enable=QtGui
            - --enable=QtNetwork
            - --enable=QtPrintSupport
            - --enable=QtWebChannel
            - --enable=QtWebEngineCore
            - --enable=QtWebEngineWidgets
            - --enable=QtWidgets
        x86_64:
          config-opts:
            - --enable=QtCore
            - --enable=QtGui
            - --enable=QtNetwork
            - --enable=QtPrintSupport
            - --enable=QtWebChannel
            - --enable=QtWebEngineCore
            - --enable=QtWebEngineWidgets
            - --enable=QtWidgets
    sources:
      - type: archive
        url: https://sourceforge.net/projects/pyqt/files/PyQt5/PyQt-5.11.3/PyQt5_gpl-5.11.3.tar.gz
        sha256: c9b57d15601d436faf35dacf8e0acefa220194829a653e771e80b189b3261073
      - type: script
        commands:
          - processed=`sed -e 's|prefix|sysroot|' <<< $@`
          - python3 configure.py $processed
        dest-filename: configure

  - name: portaudio
    config-opts:
      - --disable-static
      - --without-oss
    sources:
      - type: archive
        url: http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz
        sha256: f5a21d7dcd6ee84397446fa1fa1a0675bb2e8a4a6dceb4305a8404698d8d1513
    cleanup:
      - /lib/pkgconfig
      - /include
      - '*.la'

  - python3-beautifulsoup4.json
  - python3-send2trash.json
  - python3-pyaudio.json
  - python3-requests.json
  - python3-decorator.json
  - python3-markdown.json

  - name: anki
    no-autogen: true
    make-install-args:
      - PREFIX=/app
    post-install:
      - install -Dm644 -t /app/share/icons/hicolor/scalable/apps anki.svg
      - install -Dm644 -t /app/share/metainfo net.ankiweb.Anki.appdata.xml
      - install -Dm644 anki.xml /app/share/mime/packages/net.ankiweb.Anki.xml
      # .mo files are in a non-standard directory, work-around that,
      # so that Flatpak and Appstream can find the files
      - mv /app/share/anki/locale /app/share/locale
      - ln -s /app/share/locale /app/share/anki/locale
    sources:
      - type: archive
        url: https://apps.ankiweb.net/downloads/current/anki-2.1.8-source.tgz
        sha256: 57c466884ba43ef704c438bb0129e7ed793c468d36ea03cd3007af7a394c8b23
      - type: file
        path: anki.svg
      - type: file
        path: net.ankiweb.Anki.appdata.xml
      - type: script
        commands:
        - sed -i -e 's/cp -a/cp -dR/' Makefile
    cleanup:
      - /share/pixmaps
